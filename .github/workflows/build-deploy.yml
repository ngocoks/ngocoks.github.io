name: Deploy Static Content to GitHub Pages

on:
  push:
    branches:
      - main # Trigger workflow setiap kali ada push ke branch 'main'
  workflow_dispatch: # Mengizinkan eksekusi manual dari UI GitHub
  schedule:
    # Setiap hari pada pukul 00:00 UTC (jam 7 pagi WIB)
    # Sesuaikan '0 0 * * *' dengan waktu yang Anda inginkan
    - cron: '0 0 * * *' 

# Berikan izin yang diperlukan untuk GITHUB_TOKEN
permissions:
  contents: write   # Diperlukan untuk push file cache/log jika diubah
  pages: write      # Untuk mendeploy ke GitHub Pages
  id-token: write   # Untuk OIDC (diperlukan oleh actions/deploy-pages)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # --- Langkah Caching untuk file state/cache ---
      # Cache untuk published_posts.json dan all_blogger_posts_cache.json
      - name: Cache Blogger State and Cache Files
        id: cache-blogger-data
        uses: actions/cache@v4
        with:
          path: |
            published_posts.json
            all_blogger_posts_cache.json
          key: ${{ runner.os }}-blogger-data-${{ github.sha }} # Kunci unik berdasarkan OS dan SHA commit
          restore-keys: |
            ${{ runner.os }}-blogger-data- # Untuk mengembalikan cache terakhir jika SHA berubah

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt # Pastikan requirements.txt ada di root repo

      - name: Create dist directory
        run: mkdir -p dist

      - name: Copy static assets (e.g., logo.png)
        run: cp src/static/logo.png dist/ || true

      - name: Run content build script
        env:
          BLOGGER_API_KEY: ${{ secrets.BLOGGER_API_KEY }}
          BLOGGER_BLOG_ID: ${{ secrets.BLOGGER_BLOG_ID }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python src/build.py

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
